version: 2.1

orbs:
  python: circleci/python@1.2

jobs:
  test:
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout
      - run:
          name: Install uv
          command: |
            curl -LsSf https://astral.sh/uv/install.sh | sh
            echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Install Dependencies
          command: |
            uv sync
            # Install component packages
            for component in calculator logger notifier; do
              cd $component && uv pip install -e . && cd ..
            done
            # Install main package
            uv pip install -e .
      - run:
          name: Run Linter
          command: uv run ruff check .
      - run:
          name: Run Type Checker
          command: uv run mypy calculator logger notifier tests
      - run:
          name: Run Tests
          command: | 
            export PYTHONPATH="$PYTHONPATH:$PWD"
            uv run pytest --junitxml=test-results/results.xml --cov=calculator --cov=logger --cov=notifier
      - run:
          name: Upload Coverage
          command: uv run coverage xml
      - run:
          name: Generate coverage report
          command: uv run coverage report
      - run:
          name: Generate coverage HTML report
          command: uv run coverage html

      # Store test results to display in CircleCI UI
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_artifacts:
          path: htmlcov
          destination: coverage-report
          
workflows:
  version: 2
  build_and_test:
    jobs:
      - test
```

# 3. README.md
```markdown
# Team8 Template Repository

This repository contains a Python project with three main components that demonstrate software design patterns, testing, and CI/CD integration.

## Components

### Calculator

A basic arithmetic calculator component that provides addition, subtraction, multiplication, and division operations.

### Logger

A logging component that records operations and their results for later retrieval and analysis.

### Notifier

A notification component that sends alerts when values exceed predefined thresholds.

## Project Structure

```
team8-yotov-template-repository/
├── calculator/         # Calculator component
├── logger/             # Logger component
├── notifier/           # Notifier component
├── tests/              # Integration and end-to-end tests
├── .circleci/          # CircleCI configuration
└── ...                 # Other project files
```

## Installation

1. Clone the repository:
   ```
   git clone https://github.com/yourusername/team8-yotov-template-repository.git
   cd team8-yotov-template-repository
   ```

2. Install all components and dependencies:
   ```
   # Using uv (recommended)
   for component in calculator logger notifier; do
     cd $component && uv pip install -e . && cd ..
   done
   uv pip install -e .
   
   # Or using pip
   for component in calculator logger notifier; do
     cd $component && pip install -e . && cd ..
   done
   pip install -e .
   ```

## Usage

Here's a simple example of using all three components together:

```python
from calculator.calculator import Calculator
from logger.logger import Logger
from notifier.notifier import Notifier

# Create instances
calculator = Calculator()
logger = Logger()
notifier = Notifier()

# Set up a threshold
notifier.set_threshold("result", 100)

# Perform a calculation
result = calculator.multiply(12, 15)

# Log the operation
logger.log_operation("multiply", {"a": 12, "b": 15}, result)

# Check if result exceeds threshold
notifier.check_threshold("result", result)
```

## Testing

Run tests for all components:

```
pytest
```

## License

[License details here]
